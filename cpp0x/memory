#ifndef CPP0X_MEMORY
#define CPP0X_MEMORY

// ======================================================================
//
// memory - accommodations for as-yet unsupported C++0X features
//
// ----------------------------------------------------------------------
//
// This source file is intended for only short-term use.  Once compilers
// support the necessary C++0X features, this file should be no longer
// used and should go away.
//
// ======================================================================

#include "cpp0x/detail/config"

#include <memory>

// ----------------------------------------------------------------------
// std::shared_ptr, etc.

#if defined(CPP0X_HAS_MEMORY_SHARED_PTR)

#else
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic push
    #pragma GCC diagnostic ignored "-Wstrict-aliasing"
  #endif
  #include "boost/shared_ptr.hpp"
  #include "boost/smart_ptr/make_shared.hpp"
  #include "boost/enable_shared_from_this.hpp"
  #include "boost/weak_ptr.hpp"
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic pop
  #endif
  namespace std {
    using ::boost::bad_weak_ptr;
    using ::boost::const_pointer_cast;
    using ::boost::dynamic_pointer_cast;
    using ::boost::enable_shared_from_this;
    using ::boost::get_deleter;
    using ::boost::make_shared;
    using ::boost::shared_ptr;
    using ::boost::static_pointer_cast;
    using ::boost::weak_ptr;
  }

#endif

// ----------------------------------------------------------------------
// std::unique_ptr, etc.

#if defined(CPP0X_HAS_MEMORY_UNIQUE_PTR)

#else
  #include "cpp0x/detail/unique_ptr"
  namespace std {
    using ::boost::default_delete;
    using ::boost::unique_ptr;
  }

#endif

// ======================================================================

#endif

// vi: set filetype=cpp:expandtab:shiftwidth=2:
