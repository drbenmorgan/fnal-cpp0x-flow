#ifndef CPP0X_FUNCTIONAL
#define CPP0X_FUNCTIONAL

// ======================================================================
//
// functional - accommodations for as-yet unsupported C++0X features
//
// ----------------------------------------------------------------------
//
// This source file is intended for only short-term use.  Once compilers
// support the necessary C++0X features, this file should be no longer
// used and should go away.
//
// ======================================================================

#include "cpp0x/detail/config"

#include <functional>

// ----------------------------------------------------------------------
// std::bind, etc.

#if defined(CPP0X_HAS_FUNCTIONAL_BIND)

#else
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic push
    #pragma GCC diagnostic ignored "-Wstrict-aliasing"
  #endif
  #include "boost/bind.hpp"
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic pop
  #endif
  namespace std {
    using ::boost::bind;
    using ::boost::is_bind_expression;
    using ::boost::is_placeholder;
    namespace placeholders {
      using ::_1;
      using ::_2;
      using ::_3;
      using ::_4;
      using ::_5;
      using ::_6;
      using ::_7;
      using ::_8;
      using ::_9;
    }
  }

#endif

// ----------------------------------------------------------------------
// std::function, etc.

#if defined(CPP0X_HAS_FUNCTIONAL_FUNCTION)

#else
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic push
    #pragma GCC diagnostic ignored "-Wstrict-aliasing"
  #endif
  #include "boost/function.hpp"
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic pop
  #endif
  namespace std {
    using ::boost::bad_function_call;
    using ::boost::function;
  }

#endif

// ----------------------------------------------------------------------
// std::hash, etc.

#if defined(CPP0X_HAS_FUNCTIONAL_HASH)

#else
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic push
    #pragma GCC diagnostic ignored "-Wstrict-aliasing"
  #endif
  #include "boost/functional/hash.hpp"
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic pop
  #endif
  namespace std {
    using ::boost::hash;
  }

#endif

// ----------------------------------------------------------------------
// std::mem_fn, etc.

#if defined(CPP0X_HAS_FUNCTIONAL_MEM_FN)

#else
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic push
    #pragma GCC diagnostic ignored "-Wstrict-aliasing"
  #endif
  #include "boost/mem_fn.hpp"
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic pop
  #endif
  namespace std {
    using ::boost::mem_fn;
  }

#endif

// ----------------------------------------------------------------------
// std::reference_wrapper, etc.

#if defined(CPP0X_HAS_FUNCTIONAL_REFERENCE_WRAPPER)

#else
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic push
    #pragma GCC diagnostic ignored "-Wstrict-aliasing"
  #endif
  #include "boost/ref.hpp"
  #if GCC_IS_AT_LEAST(4, 6, 0)
    #pragma GCC diagnostic pop
  #endif
  namespace std {
    using ::boost::reference_wrapper;
    using ::boost::ref;
    using ::boost::cref;
  }

#endif

// ======================================================================

#endif

// vi: set filetype=cpp:expandtab:shiftwidth=2:
