#ifndef CPP0X_CSTDINT
#define CPP0X_CSTDINT

// ======================================================================
//
// cstdint - accommodations for as-yet unsupported C++0X features
//
// ----------------------------------------------------------------------
//
// This source file is intended for only short-term use.  Once compilers
// support the necessary C++0X features, this file should be no longer
// used and should go away.
//
// ======================================================================

#include "cpp0x/detail/config"

// ----------------------------------------------------------------------
// <cstdint>

#if defined(CPP0X_HAS_CSTDINT_HDR)
  #include <cstdint>

#else
  #include "boost/cstdint.hpp"
  namespace std {
    using ::boost::int8_t;              using ::boost::uint8_t;
    using ::boost::int16_t;             using ::boost::uint16_t;
    using ::boost::int32_t;             using ::boost::uint32_t;
    using ::boost::int64_t;             using ::boost::uint64_t;

    using ::boost::int_least8_t;        using ::boost::uint_least8_t;
    using ::boost::int_least16_t;       using ::boost::uint_least16_t;
    using ::boost::int_least32_t;       using ::boost::uint_least32_t;
    using ::boost::int_least64_t;       using ::boost::uint_least64_t;

    using ::boost::int_fast8_t;         using ::boost::uint_fast8_t;
    using ::boost::int_fast16_t;        using ::boost::uint_fast16_t;
    using ::boost::int_fast32_t;        using ::boost::uint_fast32_t;
    using ::boost::int_fast64_t;        using ::boost::uint_fast64_t;

    using ::boost::intmax_t;            using ::boost::uintmax_t;
  }

#endif

// ======================================================================

#endif

// vi: set filetype=cpp:expandtab:shiftwidth=2:
